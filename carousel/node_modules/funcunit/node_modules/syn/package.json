{
  "name": "syn",
  "version": "0.1.2",
  "main": "dist/cjs/syn.js",
  "scripts": {
    "test": "grunt test"
  },
  "devDependencies": {
    "tmp": "0.0.23",
    "grunt": "0.4.5",
    "grunt-cli": "^0.1.13",
    "grunt-contrib-concat": "0.3.0",
    "grunt-contrib-jshint": "^0.8.0",
    "grunt-jsbeautifier": "^0.2.6",
    "steal-tools": "bitovi/steal-tools#new-system-npm",
    "steal": "0.7.0",
    "testee": "0.1.7",
    "jquery": ">=2.0.0",
    "steal-qunit": "0.0.2",
    "requirejs": "2.1.X"
  },
  "system": {
    "directories": {
      "lib": "src"
    },
    "main": "syn",
    "map": {},
    "ignoreBrowser": true
  },
  "author": {
    "name": "Bitovi",
    "email": "contact@bitovi.com",
    "url": "http://bitovi.com/"
  },
  "repository": {
    "type": "git",
    "url": "git@github.com:bitovi/syn.git",
    "github": "https://github.com/bitovi/syn"
  },
  "licenses": [
    {
      "type": "MIT",
      "url": "http://opensource.org/licenses/mit-license.php"
    }
  ],
  "readme": "[![Build Status](https://travis-ci.org/bitovi/syn.png?branch=master)](https://travis-ci.org/bitovi/syn.png?branch=master)\n\n\n[![Join the chat at https://gitter.im/bitovi/syn](https://badges.gitter.im/Join%20Chat.svg)](https://gitter.im/bitovi/syn?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge)\n\n> If you are looking for the Synergy project, you can find it [here](https://www.npmjs.com/~postquagga). Thanks \n> [postquagga](https://www.npmjs.com/~postquagga) for letting us use the name!\n\nSyn lets you simulate user behavior like typing, clicking, moving, and \ndragging exactly how a real user would perform those actions.\n\n```js\nSyn.click( 'hello' )\n   .type( 'Hello World' )\n   .drag( 'trash' ); \n```\n\n## Install\n\nInstall Syn via the command line with npm:\n\n    > npm install syn\n    \nor bower:\n\n    > bower install syn\n\nOr by downloading it [here](https://github.com/bitovi/syn/archive/master.zip).\n\nInside the download, npm package and bower package, there are the following folders:\n\n - `dist/syn.js` - A standalone file that can be used with a `<script>` tag.\n - `dist/amd` - An AMD build that can be used with [RequireJS](http://requirejs.org) and other AMD loaders.\n - `dist/cjs` - A CommonJS build that is used by node or browserify.\n - `src` - The source files that can be loaded by [StealJS](http://stealjs.com), SystemJS, and eventually JSPM.\n\n## Setup\n\nThe following walk you through how to load Syn into various environments.\n\n### Node / Browserify\n\nAssuming you installed with `npm`, simply `require(\"syn\")` like the following:\n\n    var syn = require(\"syn\");\n    syn.click(document.getElementById('hello'));\n\n### StealJS\n\nIf you installed via NPM or Bower and are using the [npm](http://stealjs.com/docs/npm.html) \nor [bower](http://stealjs.com/docs/bower.html) module for configuration,\nyou can use import, require, or define to load the syn module without any configuration.\n\n    import syn from \"syn\";\n    syn.click(document.getElementById('hello'));\n\n### AMD / RequireJS\n\nAdd the following package configuration:\n\n    require.config({\n        packages: [{\n            name: 'syn',\n            location: 'PATH/TO/syn/dist/amd',\n            main: 'syn'\n        }]\n    });\n\n_PATH/TO_ should be the path from your baseUrl to the location of the syn folder.  Once this is \nproperly configured, you should be able to write:\n\n    define(['syn'], function(syn){\n      syn.click(document.getElementById('hello'));\n    });\n\n### Script Tag / Standalone\n\nIf you don't use a module loader, you can simply add the following to your page:\n\n   <script src='PATH/TO/dist/syn.js'></script>\n\n_PATH/TO_ should be the path to the installed syn folder.\n\n## Use\n\n\n\n\n### syn.click( element [, options][, callback] )\n\n### syn.dblclick( element [, options][, callback] )\n\n### syn.type( element, text [, callback] )\n\n### syn.key( element, key [, callback] )\n\n### syn.delay( time=600 )\n \n### syn.drag( element, optionsOrTarget [, callback])\n\n\n\n## Contributing\n\nTo fix a bug, fork and clone `bitovi/syn` to your computer. Next, install its npm dependencies with:\n\n    npm install\n    \nPlease add a test within the _tests_ folder and make your changes to _syn.js_ source files in the _src_ \nfolder. For a quick check that everything is working, open _test/test.html_.\n\nTo make sure all the distributables are working, run:\n\n    npm test\n  \n## Code Organization\n\nAll source files are in the _src_ folder.  Here's what each files does:\n\n - _browsers.js_ - Contains the output of _utils/recorder.html_ data.\n - _drag.js_ - Drag / drop utility.\n - _key.js_ - Typing and key event simulation.\n - _key.support.js_ - Feature detection of key event behavior.\n - _mouse.js_ - Click and mouse event simulation.\n - _mouse.support.js_ - Feature detection of mouse event behavior.\n - _syn.js_ - Main entrypoint that loads all other modules.\n - _synthtic.js_ - Creates the `syn` object and adds helpers used by other modules.\n - _typeable.js_ - Used to test if an element can be typed into.\n\nTests are in the _test_ folder.\n\n _utils/recorder.html_ is used to record behaviors of the browser that can not be feature detected.  Those\nbehaviors are added to _src/browser.js_.\n\n\n## Relevant Links\n\n1. [http://bitovi.com/blog/2010/07/syn-a-standalone-synthetic-event-library.html](http://bitovi.com/blog/2010/07/syn-a-standalone-synthetic-event-library.html)\n2. Full Syn docs coming soon!\n\n\n",
  "readmeFilename": "README.md",
  "description": "[![Build Status](https://travis-ci.org/bitovi/syn.png?branch=master)](https://travis-ci.org/bitovi/syn.png?branch=master)",
  "bugs": {
    "url": "https://github.com/bitovi/syn/issues"
  },
  "homepage": "https://github.com/bitovi/syn",
  "_id": "syn@0.1.2",
  "_from": "syn@^0.1.2"
}
